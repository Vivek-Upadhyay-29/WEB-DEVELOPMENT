{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-29T10:38:26.108Z",
    "end": "2024-02-29T10:38:28.853Z",
    "duration": 2745,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "6619740b-7388-4017-afe2-47f0bff13e8e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "c4d81450-0ab8-40c2-b874-1f6f43b5eed3",
        "title": "request tests",
        "fullFile": "/Users/eriklandvall/Workspace/js.request/test.js",
        "file": "/test.js",
        "beforeHooks": [],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "request tests \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log('\\n')\nprocess.env.HTTP_PROXY\n? console.log(`HTTP_PROXY env variable is set to: ${process.env.HTTP_PROXY}`)\n: console.log('HTTP_PROXY env variable is not set')",
            "err": {},
            "isRoot": false,
            "uuid": "d038a103-6c06-40a1-a2d3-0c731f6add93",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 252,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('http://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "edbf7c67-12b6-4813-b4f9-1a8e109f78fc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET https request",
            "fullTitle": "request tests simple GET https request",
            "timedOut": false,
            "duration": 610,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('https://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "8ec87b01-4617-4a15-aca8-1e4704468ad7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST http request",
            "fullTitle": "request tests simple POST http request",
            "timedOut": false,
            "duration": 957,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "75a6fc56-ce32-4c65-a9d7-6d477f5979d0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST https request",
            "fullTitle": "request tests simple POST https request",
            "timedOut": false,
            "duration": 106,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "bff6ebe2-50e6-4d1c-bdd8-64fdcf761669",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT http request",
            "fullTitle": "request tests simple PUT http request",
            "timedOut": false,
            "duration": 133,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "0dfb02e6-96a8-4de7-891d-54934d5693ca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT https request",
            "fullTitle": "request tests simple PUT https request",
            "timedOut": false,
            "duration": 107,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "2ebd31fd-a0ff-4fb6-976b-4171762482c5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE http request",
            "fullTitle": "request tests simple DELETE http request",
            "timedOut": false,
            "duration": 106,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "4299010c-ba74-444d-b8a9-98b3ca74340f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE https request",
            "fullTitle": "request tests simple DELETE https request",
            "timedOut": false,
            "duration": 112,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "f5b8276e-1cbb-4d8d-b8c6-1bee9a8f6f9f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 106,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/get?foo=bar',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "c829b01a-49b0-4000-99c3-4ab663ff0a65",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "204 status test",
            "fullTitle": "request tests 204 status test",
            "timedOut": false,
            "duration": 109,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/204',\nheaders   = { 'content-type':'json/application', accept:'json/application' },\nresponse  = await request.put({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(204)",
            "err": {},
            "isRoot": false,
            "uuid": "d93a2c47-bc99-4514-89d7-003f18d7b062",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "500 error test",
            "fullTitle": "request tests 500 error test",
            "timedOut": false,
            "duration": 108,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/500',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(500)",
            "err": {},
            "isRoot": false,
            "uuid": "3f05d767-9494-4f1f-8642-9b34d04f165c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "408 error test",
            "fullTitle": "request tests 408 error test",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl     = 'http://httpbin.org/delay/2',\nheaders = { 'content-type':'json/application' }\ntry\n{\n  const response = await request.get({ url, headers, timeout:10 })\n  expect(response).to.be.equal('should never happen')\n}\ncatch(error)\n{\n  expect(error.code).to.be.equal('E_REQUEST_CLIENT_TIMEOUT')\n}",
            "err": {},
            "isRoot": false,
            "uuid": "f2edb899-dbed-4f75-8e06-9446b8f7f047",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "edbf7c67-12b6-4813-b4f9-1a8e109f78fc",
          "8ec87b01-4617-4a15-aca8-1e4704468ad7",
          "75a6fc56-ce32-4c65-a9d7-6d477f5979d0",
          "bff6ebe2-50e6-4d1c-bdd8-64fdcf761669",
          "0dfb02e6-96a8-4de7-891d-54934d5693ca",
          "2ebd31fd-a0ff-4fb6-976b-4171762482c5",
          "4299010c-ba74-444d-b8a9-98b3ca74340f",
          "f5b8276e-1cbb-4d8d-b8c6-1bee9a8f6f9f",
          "c829b01a-49b0-4000-99c3-4ab663ff0a65",
          "d93a2c47-bc99-4514-89d7-003f18d7b062",
          "3f05d767-9494-4f1f-8642-9b34d04f165c",
          "f2edb899-dbed-4f75-8e06-9446b8f7f047"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2719,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2024
}